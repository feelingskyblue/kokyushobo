/* Reset CSS */
*,
*::before,
*::after {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

:where([hidden]:not([hidden=until-found])) {
  display: none !important;
}

:where(html) {
  -webkit-text-size-adjust: none;
}

@supports not (min-block-size: 100dvb) {
  :where(html) {
    block-size: 100%;
  }
}
@media (prefers-reduced-motion: no-preference) {
  :where(html:focus-within) {
    scroll-behavior: smooth;
  }
}
:where(body) {
  block-size: 100%;
  block-size: 100dvb;
  line-height: 1;
  font-family: system-ui, sans-serif;
  -webkit-font-smoothing: antialiased;
}

:where(input, button, textarea, select) {
  font: inherit;
  color: inherit;
}

:where(textarea) {
  resize: vertical;
  resize: block;
}

:where(button, label, select, summary, [role=button], [role=option]) {
  cursor: pointer;
}

:where(:disabled) {
  cursor: not-allowed;
}

:where(label:has(> input:disabled), label:has(+ input:disabled)) {
  cursor: not-allowed;
}

:where(button) {
  border-style: solid;
}

:where(a) {
  text-underline-offset: 0.2ex;
}

:where(ul, ol) {
  list-style: none;
}

:where(img, svg, video, canvas, audio, iframe, embed, object) {
  display: block;
}

:where(img, picture, svg) {
  max-inline-size: 100%;
  block-size: auto;
}

:where(p, h1, h2, h3, h4, h5, h6) {
  overflow-wrap: break-word;
}

:where(h1, h2, h3) {
  line-height: calc(1em + 0.5rem);
}

:where(hr) {
  border: none;
  border-block-start: 1px solid;
  color: inherit;
  block-size: 0;
  overflow: visible;
}

:where(:focus-visible) {
  outline: 2px solid var(--focus-color, Highlight);
  outline-offset: 2px;
}

:where(.visually-hidden:not(:focus, :active, :focus-within, .not-visually-hidden)) {
  clip-path: inset(50%) !important;
  height: 1px !important;
  width: 1px !important;
  overflow: hidden !important;
  position: absolute !important;
  white-space: nowrap !important;
  border: 0 !important;
}

body {
  transition: all 0.3s ease-in-out;
  position: relative;
}
body .novel__introduction--wrapper {
  position: fixed;
  top: 0;
  left: 0;
  width: 100dvw;
  max-width: inherit;
  height: 100dvh;
  overflow: scroll;
  z-index: 10;
  background-color: #fefbf9;
  transition: all 1s ease-in;
}
body:not(.for-cipher) {
  overflow: hidden;
}
body:not(.for-cipher) .novel__attention {
  border: 1px solid #000000;
}
body.for-cipher {
  background-color: #000;
  color: #c3abac;
}
body.for-cipher .novel__introduction--wrapper {
  opacity: 0;
  z-index: -1;
}
body.for-cipher .novel a {
  color: #ffffff;
  border-color: #ffffff;
}
body.for-cipher .novel__attention {
  border: 1px solid #ffffff;
}

.header, .footer {
  display: none;
}

.novel {
  margin: 0 auto;
}
.novel .novel__greeting {
  width: 30em;
  height: 85dvh;
  margin: 0 auto;
  display: flex;
  flex-direction: column;
  justify-content: center;
  opacity: 0.5;
}
@media (max-width: 767px) {
  .novel .novel__greeting {
    width: 20em;
    max-width: 100%;
  }
}
.novel .novel__attention {
  padding: 60px 40px;
  margin: 0 0 80px;
}
@media (max-width: 767px) {
  .novel .novel__attention {
    padding: 30px 20px;
    margin: 0 0 50px;
  }
}
@media (min-width: 768px) {
  .novel.novel__content {
    font-size: 1.8rem;
  }
}
@media (max-width: 767px) {
  .novel.novel__content {
    font-size: min((100vw - 4rem) / 21, 1.6rem);
    max-width: 21em;
  }
}
.novel.novel__content .novel__body p.voice::before {
  display: none;
}
.novel .btn__wrapper {
  margin: 80px auto 160px;
  display: flex;
  justify-content: center;
  -moz-column-gap: 15px;
       column-gap: 15px;
}
@media (max-width: 767px) {
  .novel .btn__wrapper {
    margin: 40px auto 80px;
  }
}
.novel .btn__wrapper .cat_select {
  display: block;
  padding: 10px;
  height: 40px;
  border: 1px solid rgba(var(--keyColorRgb), 0.3);
}
.novel .btn__wrapper .btn {
  background-color: #000;
  color: #ffffff;
}
.novel .btn__wrapper .btn:disabled {
  opacity: 0.1;
}
.novel .novel__footer {
  padding-bottom: 8rem;
}