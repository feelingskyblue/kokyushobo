@charset "utf-8";

/* Reset CSS */
*,
*::before,
*::after {
	margin: 0;
	padding: 0;
	box-sizing: border-box;
}

:where([hidden]:not([hidden='until-found'])) {
	display: none !important;
}

:where(html) {
	-webkit-text-size-adjust: none;
	//color-scheme: dark light;
}

@supports not (min-block-size: 100dvb) {
	:where(html) {
		block-size: 100%;
	}
}

@media (prefers-reduced-motion: no-preference) {
	:where(html:focus-within) {
		scroll-behavior: smooth;
	}
}

:where(body) {
	block-size: 100%;
	block-size: 100dvb;
	line-height: 1;
	font-family: system-ui, sans-serif;
	-webkit-font-smoothing: antialiased;
}

:where(input, button, textarea, select) {
	font: inherit;
	color: inherit;
}

:where(textarea) {
	resize: vertical;
	resize: block;
}

:where(button, label, select, summary, [role='button'], [role='option']) {
	cursor: pointer;
}

:where(:disabled) {
	cursor: not-allowed;
}

:where(label:has(> input:disabled), label:has(+ input:disabled)) {
	cursor: not-allowed;
}

:where(button) {
	border-style: solid;
}

:where(a) {
	text-underline-offset: 0.2ex;
}

:where(ul, ol) {
	list-style: none;
}

:where(img, svg, video, canvas, audio, iframe, embed, object) {
	display: block;
}

:where(img, picture, svg) {
	max-inline-size: 100%;
	block-size: auto;
}

:where(p, h1, h2, h3, h4, h5, h6) {
	overflow-wrap: break-word;
}

:where(h1, h2, h3) {
	line-height: calc(1em + 0.5rem);
}

:where(hr) {
	border: none;
	border-block-start: 1px solid;
	color: inherit;
	block-size: 0;
	overflow: visible;
}

:where(:focus-visible) {
	outline: 2px solid var(--focus-color, Highlight);
	outline-offset: 2px;
}

:where(.visually-hidden:not(:focus, :active, :focus-within, .not-visually-hidden)) {
	clip-path: inset(50%) !important;
	height: 1px !important;
	width: 1px !important;
	overflow: hidden !important;
	position: absolute !important;
	white-space: nowrap !important;
	border: 0 !important;
}

/* Utility */
$sp-width: 767px;
$textColor: #000000;
$subColor: #000000;

// FlexBox
@mixin flex($flex-wrap: nowrap) {
	display: flex;
	flex-wrap: $flex-wrap;
}
@mixin flexCentering($flex-wrap: nowrap) {
	display: flex;
	justify-content: center;
	align-items: center;
	flex-wrap: $flex-wrap;
}

/* base CSS */

body {
  background-color: #fafafa;
  color: $textColor;
  font-size: 14px;
  line-height: 1.9;
  -webkit-text-size-adjust: none;
  -ms-touch-action: none !important;
  -webkit-font-smoothing: antialiased;
}

body.fixed {
  position: fixed;
}

p:not(:last-child), blockquote:not(:last-child) {
  margin-bottom: 1.5em;
}

a {
  color: $subColor;
  text-decoration: none;
}

a:hover {
  opacity: 0.8;
}

.hidden {
  display: none;
  visibility: hidden;
}

.hide {
  display: none !important;
}

.visibility-hidden {
  position: absolute !important;
  white-space: nowrap !important;
  width: 1px !important;
  height: 1px !important;
  overflow: hidden !important;
  border: 0 !important;
  margin: 0 !important;
  padding: 0 !important;
}

.visually-hidden {
  clip: rect(0 0 0 0);
  clip: rect(0, 0, 0, 0);
  overflow: hidden;
  position: absolute;
  height: 1px;
  width: 1px;
}

.visible-phone {
  display: none !important;
}

.visible-tablet {
  display: none !important;
}

.hidden-desktop {
  display: none !important;
}

.visible-desktop {
  display: inherit !important;
}

.align-left {
  text-align: left;
}

.align-center {
  text-align: center;
}

.align-right {
  text-align: right;
}

@media (max-width: $sp-width) {

  body {
    font-size: 13px;
    line-height: 2.1;
  }

	.hidden-desktop {
    display: inherit !important;
  }
  .visible-desktop {
    display: none !important;
  }
  .visible-phone {
    display: inherit !important;
  }
  .hidden-phone {
    display: none !important;
  }

}